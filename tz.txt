ƒавайте напишем простой таск-трекер. 

¬ ней можно будет создавать задачи, брать в работу, помечать как выполненные или отмененные,
просматривать архив, смотреть статистику.

—истема должна иметь страничку со входом, содержащую форму авторизации с пол€ми логин и пароль.
”четные записи должны хранитьс€ в бд. —траничку регистрации создавать не надо, можно просто руками
записать в нее учетку.

 ажда€ задача, которую мы создаем, должна иметь описание, человека, на которого она назначена,
дату создани€. “акже необходимо записывать дату, когда задача была вз€та в работу, выполнена или отменена.

ƒолжна быть страничка, на которой можно видеть все открытые задачи, с которой можно вз€ть задачу
к себе в работу. “акже на этой странице должна быть ссылка на страничку создани€ задачи.

ƒолжна быть страничка, на которой отображаютс€ все задачи, вз€тые в работу.

¬ архиве мы должны иметь возможность видеть все выполненные и отмененные задачи, просматривать
их описание.

Ќа страничке со статистикой необходимо вывести количество открытых задач, количество отмененных,
 количество задач в работе, среднее врем€ выполнени€ задачи.

Ќа внешний вид системы можно вообще не тратить врем€, необходимо, чтобы система работала.

—тек:

Python 3.7
Flask
SQLAlchemy Core (ORM использовать нельз€)
SQLite

–езультатом выполнени€ должен быть git-репозиторий.